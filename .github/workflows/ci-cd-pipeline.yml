################ CI and CD pipeline ################

# On push, runs the CI pipeline: Clean, Restore, Build, Code Quality Analysis, Test and Coverage tasks, in that order.
# On versioning (new tag), runs the CD pipeline: CI pipeline, Package and Publish tasks, in that order.

# Docs:
#   - https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
#   - https://docs.microsoft.com/en-us/dotnet/core/tools/?tabs=netcore
#   - https://github.com/coverlet-coverage/coverlet/blob/master/Documentation/MSBuildIntegration.md
#   - https://danielpalme.github.io/ReportGenerator/usage.html

name:  CI / CD pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  create:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
################ SETUP STEPS ################
    steps:
    - name: Checkout the repo
#      env:
#        SLN_PATH: "./src/Krafted/Krafted.sln"
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.5.0
      with:
        dotnet-version: 3.1.301
        source-url: https://nuget.pkg.github.com/maiconheck/index.json
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Install the .NET tools
      run: dotnet tool restore

################## CI STEPS ##################
    - name: CLEAN - Cleans the output
      run: dotnet clean "./src/Krafted/Krafted.sln" --output artifacts

    - name: RESTORE - Install the dependencies
      run: dotnet restore "./src/Krafted/Krafted.sln"

    - name: BUILD / CODE QUALITY - Build and run code quality analysis
      run: dotnet build "./src/Krafted/Krafted.sln" --configuration Release --no-restore -warnaserror

    - name: TEST - Executes unit and integration tests
      run: dotnet test "./src/Krafted/Krafted.sln" --no-restore /p:CollectCoverage=true /p:CoverletOutput="../../coverage-results/" /p:MergeWith="../../coverage-results/coverage.json" /p:ExcludeByAttribute="GeneratedCodeAttribute%2cCompilerGeneratedAttribute" /p:CoverletOutputFormat="opencover%2cjson" -m:1

    - name: COVERAGE - Calculates and generates a code coverage report
      run: dotnet reportgenerator "-reports:./src/coverage-results/coverage.opencover.xml" "-targetdir:./src/coverage-results/report" "-reporttypes:Html;Badges"

################## CD STEPS ##################
    - name: PACKAGE - Generates the nuget packages
      if: startsWith(github.ref, 'refs/tags/')
      run: dotnet pack "./src/Krafted/Krafted.sln" --output artifacts --include-symbols --include-source

    - name: PUBLISH - Pushes the packages to the server and publishes them
      if: startsWith(github.ref, 'refs/tags/')
      run: dotnet nuget push "artifacts\*.nupkg" --skip-duplicate -k ${{secrets.NUGET_API_KEY}} --s https://api.nuget.org/v3/index.json
      #env:
      #  NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}



