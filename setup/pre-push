#!/bin/bash

# This was adapted from Neil Redfern.
# Source: https://github.com/Redfern/dot-net-core-pre-push-checks/blob/master/pre-push
# Retrieved in Dezember 2018.

RED='\033[0;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Running pre push to dev check...${NC}"
echo -e "${YELLOW}Trying to build tests project...${NC}"

# clean / restore / build the project
dotnet clean "./src/Krafted/Krafted.sln" --output artifacts
dotnet restore "./src/Krafted/Krafted.sln"
dotnet build "./src/Krafted/Krafted.sln" --configuration Debug --no-restore -warnaserror

rb=$?
if [[ $rb != 0 ]] ; then
	# A non-zero return code means an error occurred, so tell the user and exit
	echo -e "${RED}Build failed, please fix and push again${NC}"
	echo ""
	exit $rb
fi

# navigate to the test project to run the tests
# TODO: change this to your test project directory
echo -e "${YELLOW}Running unit tests...${NC}"
echo ""

# run the unit tests
dotnet test "./src/Krafted/Krafted.sln"

# $? is a shell variable which stores the return code from what we just ran
rc=$?
if [[ $rc != 0 ]] ; then
	# A non-zero return code means an error occurred, so tell the user and exit
	echo -e "${RED}Unit tests failed, please fix and push again${NC}"
	echo ""
	exit $rc
fi

# everything went OK so we can exit with a zero
echo -e "${GREEN}Pre push check passed!${NC}"
    echo ""

exit 0
