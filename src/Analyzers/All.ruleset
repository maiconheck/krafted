<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="All Ruleset" Description="All Rulesets in ..\Templates folder. For use in libraries or any project where you want to get the most analyzes, including documentation analyzes." ToolsVersion="14.0">
	<Include Path=".\Templates\General.ruleset" Action="Default" />
	<Include Path=".\Templates\DisabledOnTest.ruleset" Action="Default" />
	<Include Path=".\Templates\EnabledDocumentation.ruleset" Action="Default" />

    <!--
        We no longer need ConfigureAwait (false) on the .NET Core.
         However, we must continue to use it in netstandard libraries,
         because in this case, we don't know if the client is FullFramework:

         - https://stackoverflow.com/questions/42053135/configureawaitfalse-relevant-in-asp-net-core
         - https://blog.stephencleary.com/2017/03/aspnetcore-synchronization-context.html#comment-3582687662
    -->
    <Rules AnalyzerId="Microsoft.Analyzers.ManagedCodeAnalysis" RuleNamespace="Microsoft.Rules.Managed">
        <Rule Id="CA2007" Action="Warning" />  <!-- Do not directly await a Task without calling ConfigureAwait -->
    </Rules>
    <Rules AnalyzerId="Roslynator.CSharp.Analyzers" RuleNamespace="Roslynator.CSharp.Analyzers">
        <Rule Id="RCS1090" Action="Warning" /> <!-- Call 'ConfigureAwait(false)' -->
    </Rules>
    <Rules AnalyzerId="CodeCracker.CSharp" RuleNamespace="CodeCracker.CSharp">
        <Rule Id="CC0001" Action="None" />  <!-- Always use var -->
    </Rules>
    <Rules AnalyzerId="Microsoft.CodeAnalysis.CSharp" RuleNamespace="Microsoft.CodeAnalysis.CSharp">
        <Rule Id="CS1591" Action="None" /> <!-- C# Missing XML comment for publicly visible type or member -->
    </Rules>
</RuleSet>
